# Package ######################################################################

[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name="SuperSuit"
description="Wrappers for Gymnasium and PettingZoo"
readme="README.md"
requires-python = ">= 3.8, < 3.12"
authors = [{ name = "Farama Foundation", email = "contact@farama.org" }]
license = { text = "MIT License" }
keywords=["Reinforcement Learning", "game", "RL", "AI", "gymnasium"]
classifiers=[
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = ["numpy>=1.19.0", "gymnasium>=0.28.1", "tinyscaler>=1.2.6"]
dynamic = ["version"]

[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
testing = ["pettingzoo[butterfly,classic]>=1.23.1", "pytest", "stable-baselines3>=2.0.0", "moviepy >=1.0.0"]

[project.urls]
Homepage = "https://farama.org"
Repository = "https://github.com/Farama-Foundation/SuperSuit"
"Bug Report" = "https://github.com/Farama-Foundation/SuperSuit/issues"


[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["supersuit", "supersuit.*"]

# Linters and Test tools #######################################################

[tool.black]
safe = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["supersuit", "test"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["supersuit/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
# reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:gymnasium.*:"]
